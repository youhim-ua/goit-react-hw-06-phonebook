{"version":3,"sources":["components/Filter/Filter.module.scss","components/Container/Container.module.scss","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducers.js","redux/store.js","redux/phonebook/phonebook-selectors.js","components/Container/index.jsx","redux/phonebook/phonebook-operations.js","components/ContactForm/index.jsx","components/ContactList/index.jsx","components/Filter/index.jsx","App.js","index.js","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","actions","contacts","createReducer","_","payload","state","filter","contact","id","loading","error","rootReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","getAllContacts","getFilter","getVisibleContacts","createSelector","allContacts","formattedFilter","toLowerCase","name","includes","getLoading","getError","Container","children","this","props","className","styles","container","Component","axios","defaults","baseURL","dispatch","get","then","data","catch","number","post","delete","ContactForm","handleSaveName","target","value","setState","handleSubmit","event","preventDefault","some","elem","alert","reset","contactSubmit","onSubmit","contactsForm","label","input","type","pattern","title","required","onChange","addButton","connect","selectors","contactsOperations","ContactList","fetchContacts","onDeleteContact","lds_ellipsis","contactList","map","listItem","deleteButton","onClick","error_message","filterLabel","filterInput","autoComplete","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b397f2e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__2JBZ9\",\"filterInput\":\"Filter_filterInput__3YsTU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3T07v\"};","// import actionTypes from '../phonebook/phonebook-types';\nimport { createAction } from '@reduxjs/toolkit';\n\n// const addContact = (contact) => ({\n//     type: actionTypes.ADD,\n//     payload: contact\n// });\n\n// const deleteContact = (contactID) => ({\n//     type: actionTypes.DELETE,\n//     payload: contactID\n// });\n\n// const filterContact = (name) => ({\n//     type: actionTypes.FILTER,\n//     payload: name\n// });\n\nconst fetchContactRequest = createAction('phonebook/fetchContactRequest');\nconst fetchContactSuccess = createAction('phonebook/fetchContactSuccess');\nconst fetchContactError = createAction('phonebook/fetchContactError');\n\n// const addContact = createAction('phonebook/add');\n\nconst addContactRequest = createAction('phonebook/addContactRequest');\nconst addContactSuccess = createAction('phonebook/addContactSuccess');\nconst addContactError = createAction('phonebook/addContactError');\n\n// const deleteContact = createAction('phonebook/delete');\n\nconst deleteContactRequest = createAction('phonebook/deleteContactRequest');\nconst deleteContactSuccess = createAction('phonebook/deleteContactSuccess');\nconst deleteContactError = createAction('phonebook/deleteContactError');\n\nconst filterContact = createAction('phonebook/filter');\n\n// eslint-disable-next-line\nexport default {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n};\n","import { createReducer } from '@reduxjs/toolkit';\n// import actionTypes from './phonebook-types';\nimport actions from './phonebook-actions';\n\nconst {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n} = actions;\n\n// const contacts = (state = [], {type, payload}) => {\n//     switch (type) {\n//         case actionTypes.ADD:\n//             return [...state, payload]\n\n//         case actionTypes.DELETE:\n//             return state.filter(contact => contact.id !== payload)\n\n//         default:\n//             return state;\n//     }\n// }\n\n// const filter = (state = '', {type, payload}) => {\n//     switch (type) {\n//         case actionTypes.FILTER:\n//             return payload;\n\n//         default:\n//             return state;\n//     }\n\n// }\n\nconst contacts = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(false, {\n  [fetchContactError]: () => true,\n  [fetchContactSuccess]: () => false,\n  [addContactError]: () => true,\n  [addContactSuccess]: () => false,\n  [deleteContactError]: () => true,\n  [deleteContactSuccess]: () => false,\n});\n\nexport { contacts, filter, loading, error };\n","// import { combineReducers } from 'redux';\nimport { logger } from 'redux-logger';\nimport {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n  contacts,\n  filter,\n  loading,\n  error,\n} from './phonebook/phonebook-reducers';\n\nconst rootReducer = combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// const persistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport { store }; //persistor\n","import { createSelector } from 'reselect';\n\nconst getAllContacts = state => state.contacts;\n\nconst getFilter = state => state.filter;\n\nconst getLoading = state => state.loading;\n\nconst getError = state => state.error;\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (allContacts, filter) => {\n    const formattedFilter = filter.toLowerCase();\n    return allContacts.filter(({ name }) =>\n      name.toLowerCase().includes(formattedFilter),\n    );\n  },\n);\n\n// eslint-disable-next-line\nexport default {\n  getAllContacts,\n  getFilter,\n  getVisibleContacts,\n  getLoading,\n  getError,\n};\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.scss';\n\nclass Container extends Component {\n  render() {\n    const { children } = this.props;\n\n    return <section className={styles.container}>{children}</section>;\n  }\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import axios from 'axios';\nimport actions from './phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:4041';\n\nconst fetchContact = () => dispatch => {\n  dispatch(actions.fetchContactRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\n    .catch(error => dispatch(actions.fetchContactError(error)));\n};\n\nconst addContact = ({ name, number }) => dispatch => {\n  dispatch(actions.addContactRequest());\n\n  const contact = { name, number };\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch(error => dispatch(actions.addContactError(error)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\n    .catch(error => dispatch(actions.deleteContactError(error)));\n};\n// eslint-disable-next-line\nexport default { fetchContact, addContact, deleteContact };\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport contactsOperations from '../../redux/phonebook/phonebook-operations';\nimport selectors from '../../redux/phonebook/phonebook-selectors';\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleSaveName = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name } = this.state;\n    const { contacts } = this.props;\n    if (contacts.some(elem => elem.name === name)) {\n      alert(`${name} is already in contacts`);\n      this.reset();\n      return;\n    }\n    this.props.contactSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.contactsForm}>\n        <label className={styles.label}>\n          Name\n          <br />\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.handleSaveName}\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <br />\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={this.handleSaveName}\n          />\n        </label>\n        <button className={styles.addButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: selectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  contactSubmit: ({ name, number }) =>\n    dispatch(\n      contactsOperations.addContact({\n        name,\n        number,\n      }),\n    ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport selectors from '../../redux/phonebook/phonebook-selectors';\nimport contactsOperations from '../../redux/phonebook/phonebook-operations';\nimport styles from './ContactList.module.scss';\n\nclass ContactList extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { contacts, loading, onDeleteContact, error } = this.props;\n\n    return (\n      <>\n        {loading && (\n          <div className={styles.lds_ellipsis}>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n        )}\n        <ul className={styles.contactList}>\n          {contacts.map(({ id, name, number }) => (\n            <li className={styles.listItem} key={id}>\n              <span>{name}</span>:\n              <span className={styles.number}>{number}</span>\n              <button\n                className={styles.deleteButton}\n                onClick={() => onDeleteContact(id)}\n              >\n                delete\n              </button>\n            </li>\n          ))}\n        </ul>\n        {error && (\n          <p className={styles.error_message}>\n            Server do not response! <br />\n            Please, reload page or try later.\n          </p>\n        )}\n      </>\n    );\n  }\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: selectors.getVisibleContacts(state),\n  loading: selectors.getLoading(state),\n  error: selectors.getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContact()),\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport actions from '../../redux/phonebook/phonebook-actions';\nimport selectors from '../../redux/phonebook/phonebook-selectors';\nimport styles from './Filter.module.scss';\n\nfunction Filter({ filter, filterContact }) {\n  return (\n    <label className={styles.filterLabel}>\n      Find contacts by name\n      <br />\n      <input\n        className={styles.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={filterContact}\n        autoComplete=\"off\"\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  filterContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: selectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  filterContact: ({ target: { value } }) =>\n    dispatch(actions.filterContact(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { connect } from 'react-redux';\nimport selectors from './redux/phonebook/phonebook-selectors';\nimport PropTypes from 'prop-types';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nfunction App({ contacts }) {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {contacts.length !== 0 && <h2>Contacts</h2>}\n      {contacts.length !== 0 && <Filter />}\n      <ContactList />\n    </Container>\n  );\n}\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nconst mapStateToProps = state => ({\n  contacts: selectors.getAllContacts(state),\n});\n\nexport default connect(mapStateToProps, null)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store'; //persistor\n// import { PersistGate } from 'redux-persist/integration/react';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactForm_contactsForm__Huhrb\",\"label\":\"ContactForm_label__55Xu7\",\"input\":\"ContactForm_input__2wmAF\",\"addButton\":\"ContactForm_addButton__3OBs3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2xmqx\",\"listItem\":\"ContactList_listItem__2qVpP\",\"number\":\"ContactList_number__2mlH2\",\"deleteButton\":\"ContactList_deleteButton__3Ucn9\",\"lds_ellipsis\":\"ContactList_lds_ellipsis__wvLtp\",\"lds_ellipsis1\":\"ContactList_lds_ellipsis1__1oddg\",\"lds_ellipsis2\":\"ContactList_lds_ellipsis2__36lGl\",\"lds_ellipsis3\":\"ContactList_lds_ellipsis3__5yJXV\",\"error_message\":\"ContactList_error_message__GPCNv\"};"],"sourceRoot":""}